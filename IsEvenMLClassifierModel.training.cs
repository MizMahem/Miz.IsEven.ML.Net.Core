﻿// This file was auto-generated by ML.NET Model Builder. 
namespace Miz.IsEven.ML.Net.Core;

using System.Linq;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML;

public partial class IsEvenMLClassifierModel
{
    public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
    {
        var pipeline = BuildPipeline(context);
        var model = pipeline.Fit(trainData);

        return model;
    }

    /// <summary>
    /// build the pipeline that is used from model builder. Use this function to retrain model.
    /// </summary>
    /// <param name="mlContext"></param>
    /// <returns></returns>
    public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
    {
        // Data process configuration with pipeline data transformations
        var pipeline = mlContext.Transforms.ReplaceMissingValues(@"Number", @"Number")      
                                .Append(mlContext.Transforms.Concatenate(@"Features", @"Number"))      
                                .Append(mlContext.Transforms.Conversion.MapValueToKey(@"IsEvenOrOdd", @"IsEvenOrOdd"))      
                                .Append(mlContext.MulticlassClassification.Trainers.OneVersusAll(binaryEstimator:mlContext.BinaryClassification.Trainers.FastTree(new FastTreeBinaryTrainer.Options(){NumberOfLeaves=849,MinimumExampleCountPerLeaf=3,NumberOfTrees=9,MaximumBinCountPerFeature=1024,LearningRate=0.997029068086956F,FeatureFraction=0.999534657083184F,LabelColumnName=@"IsEvenOrOdd",FeatureColumnName=@"Features"}), labelColumnName: @"IsEvenOrOdd"))      
                                .Append(mlContext.Transforms.Conversion.MapKeyToValue(@"PredictedLabel", @"PredictedLabel"));

        return pipeline;
    }
}
